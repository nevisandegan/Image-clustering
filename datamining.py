# -*- coding: utf-8 -*-
"""datamining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18-c4D9eEZPT4tkhkntfYQsQq7b7ylVRV
"""

from sklearn.cluster import KMeans
from sklearn.decomposition import PCA
import os
import numpy as np
import matplotlib.pyplot as plt
from random import randint
import pandas as pd
import pickle
import copy

from google.colab import drive
drive.mount("/content/gdrive", force_remount=True)

emb=np.load("/content/embeddings.npy")
emb

path='/content/gdrive/MyDrive/images'
os.chdir(path)

face = []
with os.scandir(path) as files:
    for file in files:
        if file.name.endswith('.jpg'):
            face.append(file.name)

facesort=copy.deepcopy(face) 
facesort

from sklearn.cluster import KMeans

num_clusters = 40
clustering_model = KMeans(n_clusters=num_clusters)
clustering_model.fit(emb)
cluster_assignment = clustering_model.labels_

print(cluster_assignment)

groups = {}
for file, cluster in zip(face,cluster_assignment):
    if cluster not in groups.keys():
        groups[cluster] = []
        groups[cluster].append(file)
    else:
        groups[cluster].append(file)


import collections

clus = collections.OrderedDict(sorted(groups.items()))

for key, value in clus.items():
    print(f"cluster--->{key}")
    print(value)

golden={}
for i in range(9) :
  golden[i]=[]
  for j in facesort: 
    if j.startswith(f"A0{i+1}"):
     golden[i].append(j)

for i in range(10,40):
  golden[i]=[]
  for j in facesort: 
    if j.startswith(f"A{i+1}"):
     golden[i].append(j)
